using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace PentestingSystem.Migrations
{
    /// <inheritdoc />
    public partial class RepopulateDatabase : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "0f1f7977-3c4f-4e8d-b820-62ca629df0a3");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "612fe371-e34f-42ed-b812-b3bc6a515c10");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "9f52ab0e-33bb-49ed-8d29-5fef335d3784");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "c2efa499-e5e5-44d0-8eff-b6a33a569f92");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "2e04d4c6-2c71-4dc1-8e2e-8e4861fee2e4");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "433756eb-8590-416f-950a-f8d306b2f617");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "6ab30c05-d538-46de-b55c-97cce05bdae3");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "71b8816d-5008-4deb-9b0d-fecc0e7e78e5");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "909c0382-e7f8-4714-b72a-888ab2b23bde");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "9dac6776-27c8-406b-9c2d-a1326713b80f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "ad5cbc4e-708b-419a-9378-2e734a043db8");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "cf8748bc-68ff-46c6-b02a-814be80c52f0");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "eab9fc66-a9ed-49f7-8ebd-9155d011dc23");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "f144a222-9ca2-4cff-a657-28b1bff8768c");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "1ab998be-90c7-41c5-a7c4-5038134cb047", "IP" },
                    { "6f913ede-4657-4e3d-85d4-f369e78e4366", "CyberSecurity" },
                    { "ce77392f-bdfc-4215-8abd-e0abaf269b8c", "DNS" },
                    { "f990e941-b9a1-4a45-93db-ca593e5cb515", "Network" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "0a527636-259b-41b9-b40b-6b7b5ac4e7f9", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "0f7b6fe0-340b-418c-b204-073ee9664a75", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "7c3667e4-a9eb-43b1-bcdd-d65ddc5f474c", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "81b1f045-8536-4737-9409-672b09026692", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "ab088198-6121-4c40-883a-35d963c8958f", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "b34f68ee-b577-4598-bf3f-0fc3b73af5e0", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "b389b138-579d-42c2-8261-9ff52334ecc0", "Basic TCP scan", "nmap -sT" },
                    { "d3e871be-373d-4b5d-9c53-025a0dfa5c3e", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "dd203a5a-7a6b-44c2-9b59-bf16a55c95f7", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "dfb12e8c-792c-4673-9dba-7189ece8a766", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "1ab998be-90c7-41c5-a7c4-5038134cb047");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "6f913ede-4657-4e3d-85d4-f369e78e4366");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "ce77392f-bdfc-4215-8abd-e0abaf269b8c");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "f990e941-b9a1-4a45-93db-ca593e5cb515");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "0a527636-259b-41b9-b40b-6b7b5ac4e7f9");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "0f7b6fe0-340b-418c-b204-073ee9664a75");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "7c3667e4-a9eb-43b1-bcdd-d65ddc5f474c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "81b1f045-8536-4737-9409-672b09026692");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "ab088198-6121-4c40-883a-35d963c8958f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b34f68ee-b577-4598-bf3f-0fc3b73af5e0");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b389b138-579d-42c2-8261-9ff52334ecc0");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "d3e871be-373d-4b5d-9c53-025a0dfa5c3e");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "dd203a5a-7a6b-44c2-9b59-bf16a55c95f7");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "dfb12e8c-792c-4673-9dba-7189ece8a766");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "0f1f7977-3c4f-4e8d-b820-62ca629df0a3", "IP" },
                    { "612fe371-e34f-42ed-b812-b3bc6a515c10", "CyberSecurity" },
                    { "9f52ab0e-33bb-49ed-8d29-5fef335d3784", "Network" },
                    { "c2efa499-e5e5-44d0-8eff-b6a33a569f92", "DNS" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "2e04d4c6-2c71-4dc1-8e2e-8e4861fee2e4", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "433756eb-8590-416f-950a-f8d306b2f617", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "6ab30c05-d538-46de-b55c-97cce05bdae3", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "71b8816d-5008-4deb-9b0d-fecc0e7e78e5", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "909c0382-e7f8-4714-b72a-888ab2b23bde", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "9dac6776-27c8-406b-9c2d-a1326713b80f", "Basic TCP scan", "nmap -sT" },
                    { "ad5cbc4e-708b-419a-9378-2e734a043db8", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "cf8748bc-68ff-46c6-b02a-814be80c52f0", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "eab9fc66-a9ed-49f7-8ebd-9155d011dc23", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "f144a222-9ca2-4cff-a657-28b1bff8768c", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" }
                });
        }
    }
}
