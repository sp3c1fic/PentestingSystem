using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace PentestingSystem.Migrations
{
    /// <inheritdoc />
    public partial class DefaultIdentity : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "4ebf75d4-f0d9-43e1-90e9-959117e9c57f");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "89c93f61-22e4-4b87-abb0-79a14fad86bf");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "eedb252d-1ada-4a7b-8f93-4e472d4bab46");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "f160560f-cacd-4fd7-8d9e-28c6dea56f29");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "003e4f43-5580-4c8f-8f0f-5db9bc576e16");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "1f763b92-84b5-4b22-8770-c1e9df9d6d83");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "24542c50-4f59-49da-8b1b-624660a85ce1");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "76b1d521-7f01-4723-9850-74bb6261f6fb");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "a0873cce-484e-405c-8f71-6685e6e6f72c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "afdd6f86-d8f1-4a51-b954-f759efdb75b8");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b1769cd6-abe4-4e98-8ccf-84c05ca98f71");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c3a6a1a5-32f2-4dba-8b62-be6671c50e34");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c4aa1017-958a-42f0-af20-517b9201e832");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e5e39d5f-3e04-4132-bf20-57fe496de97d");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "0f1f7977-3c4f-4e8d-b820-62ca629df0a3", "IP" },
                    { "612fe371-e34f-42ed-b812-b3bc6a515c10", "CyberSecurity" },
                    { "9f52ab0e-33bb-49ed-8d29-5fef335d3784", "Network" },
                    { "c2efa499-e5e5-44d0-8eff-b6a33a569f92", "DNS" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "2e04d4c6-2c71-4dc1-8e2e-8e4861fee2e4", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "433756eb-8590-416f-950a-f8d306b2f617", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "6ab30c05-d538-46de-b55c-97cce05bdae3", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "71b8816d-5008-4deb-9b0d-fecc0e7e78e5", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "909c0382-e7f8-4714-b72a-888ab2b23bde", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "9dac6776-27c8-406b-9c2d-a1326713b80f", "Basic TCP scan", "nmap -sT" },
                    { "ad5cbc4e-708b-419a-9378-2e734a043db8", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "cf8748bc-68ff-46c6-b02a-814be80c52f0", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "eab9fc66-a9ed-49f7-8ebd-9155d011dc23", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "f144a222-9ca2-4cff-a657-28b1bff8768c", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "0f1f7977-3c4f-4e8d-b820-62ca629df0a3");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "612fe371-e34f-42ed-b812-b3bc6a515c10");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "9f52ab0e-33bb-49ed-8d29-5fef335d3784");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "c2efa499-e5e5-44d0-8eff-b6a33a569f92");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "2e04d4c6-2c71-4dc1-8e2e-8e4861fee2e4");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "433756eb-8590-416f-950a-f8d306b2f617");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "6ab30c05-d538-46de-b55c-97cce05bdae3");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "71b8816d-5008-4deb-9b0d-fecc0e7e78e5");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "909c0382-e7f8-4714-b72a-888ab2b23bde");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "9dac6776-27c8-406b-9c2d-a1326713b80f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "ad5cbc4e-708b-419a-9378-2e734a043db8");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "cf8748bc-68ff-46c6-b02a-814be80c52f0");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "eab9fc66-a9ed-49f7-8ebd-9155d011dc23");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "f144a222-9ca2-4cff-a657-28b1bff8768c");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "4ebf75d4-f0d9-43e1-90e9-959117e9c57f", "IP" },
                    { "89c93f61-22e4-4b87-abb0-79a14fad86bf", "DNS" },
                    { "eedb252d-1ada-4a7b-8f93-4e472d4bab46", "Network" },
                    { "f160560f-cacd-4fd7-8d9e-28c6dea56f29", "CyberSecurity" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "003e4f43-5580-4c8f-8f0f-5db9bc576e16", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "1f763b92-84b5-4b22-8770-c1e9df9d6d83", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "24542c50-4f59-49da-8b1b-624660a85ce1", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "76b1d521-7f01-4723-9850-74bb6261f6fb", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "a0873cce-484e-405c-8f71-6685e6e6f72c", "Basic TCP scan", "nmap -sT" },
                    { "afdd6f86-d8f1-4a51-b954-f759efdb75b8", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "b1769cd6-abe4-4e98-8ccf-84c05ca98f71", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "c3a6a1a5-32f2-4dba-8b62-be6671c50e34", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "c4aa1017-958a-42f0-af20-517b9201e832", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "e5e39d5f-3e04-4132-bf20-57fe496de97d", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" }
                });
        }
    }
}
