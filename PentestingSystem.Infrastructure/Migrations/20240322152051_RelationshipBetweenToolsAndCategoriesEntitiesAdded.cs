using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace PentestingSystem.Migrations
{
    /// <inheritdoc />
    public partial class RelationshipBetweenToolsAndCategoriesEntitiesAdded : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "3a392b7e-97d1-4b91-addc-7c2beaf78c71");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "590a9ee7-d189-4b89-b047-043177828243");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "6f729106-2d55-4f66-9bc5-32113d40828f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "78809eb8-9598-4c46-87f5-47cee79ef626");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8ab5ae77-41a7-403a-a8b8-063f0be413cc");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b4b5a468-09d2-404b-bfa2-a6d7b430ab3e");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c046cad5-06eb-456a-b4ec-e997b0dce607");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "daf17004-f3f5-47d1-89bd-3cab67382338");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "df5f6ad6-5e87-43a2-b371-11f5bfae051d");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e4f1c911-8ca3-481c-a6b6-dbd53808d826");

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "022d1a84-fe24-47de-ba13-279e3199144c", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "13753203-72c6-4344-a899-c73e77f91933", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "1b4b2b17-dc71-48f9-a243-5784f764eb92", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "4adc96c9-5ecc-467f-8e1e-e9c45dc9d750", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "5b52b1f0-cd11-40a4-af3c-f1376a8cb316", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "77ce522c-f16f-4284-9044-f4cd54031a89", "Basic TCP scan", "nmap -sT" },
                    { "d74a14dd-b06e-4e68-9531-8e87e692abdb", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "dd900bab-f943-4303-9de0-a6eddc0efb96", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "e0cc4206-0d37-4784-9a88-3b3e1714b588", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "fe6f590b-f1c5-4115-825d-0e881505d63d", "Scans the top ten ports", "sudo nmap --top-ports=10" }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "022d1a84-fe24-47de-ba13-279e3199144c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "13753203-72c6-4344-a899-c73e77f91933");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "1b4b2b17-dc71-48f9-a243-5784f764eb92");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "4adc96c9-5ecc-467f-8e1e-e9c45dc9d750");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "5b52b1f0-cd11-40a4-af3c-f1376a8cb316");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "77ce522c-f16f-4284-9044-f4cd54031a89");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "d74a14dd-b06e-4e68-9531-8e87e692abdb");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "dd900bab-f943-4303-9de0-a6eddc0efb96");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e0cc4206-0d37-4784-9a88-3b3e1714b588");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "fe6f590b-f1c5-4115-825d-0e881505d63d");

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "3a392b7e-97d1-4b91-addc-7c2beaf78c71", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "590a9ee7-d189-4b89-b047-043177828243", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "6f729106-2d55-4f66-9bc5-32113d40828f", "Basic TCP scan", "nmap -sT" },
                    { "78809eb8-9598-4c46-87f5-47cee79ef626", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "8ab5ae77-41a7-403a-a8b8-063f0be413cc", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "b4b5a468-09d2-404b-bfa2-a6d7b430ab3e", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "c046cad5-06eb-456a-b4ec-e997b0dce607", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "daf17004-f3f5-47d1-89bd-3cab67382338", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "df5f6ad6-5e87-43a2-b371-11f5bfae051d", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "e4f1c911-8ca3-481c-a6b6-dbd53808d826", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" }
                });
        }
    }
}
