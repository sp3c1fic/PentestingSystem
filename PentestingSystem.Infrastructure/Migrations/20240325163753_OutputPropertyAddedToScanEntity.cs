using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace PentestingSystem.Migrations
{
    /// <inheritdoc />
    public partial class OutputPropertyAddedToScanEntity : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "43e3e148-06f3-47c9-9d62-86170f02b5ef");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "65949d82-869c-40fb-8afa-f474d768b182");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "6d663b57-9da7-4718-b931-880f92dc2cbe");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "df9a0419-4360-4d50-a750-aab1df7ad52f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "122ff737-d039-44e0-9500-338e8f87760c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "4cdc7f89-086c-4abb-a570-7c58705a6156");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "6a076450-48b8-4554-a02f-454ca2ca12a2");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8bfe4341-c999-4d5c-ba48-40c36b22b4ae");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b8a1674a-8e3b-4c4d-98b7-d900be82b77b");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "bd10a9e1-39ed-4742-ada6-42fcc1f4e71c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "be5b23ad-4e20-4ced-9ac4-ee9f329762eb");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c0ffbfe9-c554-4fb0-b8c0-c3b2202a6745");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "d3c86359-5ca6-420a-8875-f14256a86930");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e4b1161a-8917-4fa3-ab5c-579501582fcf");

            migrationBuilder.AddColumn<string>(
                name: "Output",
                table: "Scans",
                type: "nvarchar(max)",
                nullable: false,
                defaultValue: "");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "0533240a-06de-41f2-a2e8-f64d8974a702", "IP" },
                    { "43badab3-da4b-4d4d-8fdb-94257e3d8b57", "CyberSecurity" },
                    { "4d52fd2b-9c87-4086-9957-458347e38a81", "Network" },
                    { "ca94588b-4b9b-4224-9996-ce362c035820", "DNS" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "14d00242-2137-4ad5-a993-9dc60a988836", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "488ef185-1b8d-4bbc-ba4a-ced765cfa79f", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "8a18c0b8-67cd-4c3a-9802-a9dac41a49a7", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "8c2724c3-48c3-45d3-b454-726595f5018c", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "970f12c6-5206-4a38-92db-6f81afd8bef3", "Basic TCP scan", "nmap -sT" },
                    { "b6e6db69-235e-4107-b2ef-99c3c8445acb", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "c046c0cf-cfec-4c1d-bdd3-3208e49759ef", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "c8dab8e6-c07a-41a0-aa2b-a326b42806b0", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "e625de43-0ff3-456e-9811-0305a922adee", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "f83b2a02-5cd3-4844-a4fd-860d7d10a63d", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "0533240a-06de-41f2-a2e8-f64d8974a702");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "43badab3-da4b-4d4d-8fdb-94257e3d8b57");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "4d52fd2b-9c87-4086-9957-458347e38a81");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "ca94588b-4b9b-4224-9996-ce362c035820");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "14d00242-2137-4ad5-a993-9dc60a988836");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "488ef185-1b8d-4bbc-ba4a-ced765cfa79f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8a18c0b8-67cd-4c3a-9802-a9dac41a49a7");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8c2724c3-48c3-45d3-b454-726595f5018c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "970f12c6-5206-4a38-92db-6f81afd8bef3");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b6e6db69-235e-4107-b2ef-99c3c8445acb");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c046c0cf-cfec-4c1d-bdd3-3208e49759ef");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c8dab8e6-c07a-41a0-aa2b-a326b42806b0");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e625de43-0ff3-456e-9811-0305a922adee");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "f83b2a02-5cd3-4844-a4fd-860d7d10a63d");

            migrationBuilder.DropColumn(
                name: "Output",
                table: "Scans");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "43e3e148-06f3-47c9-9d62-86170f02b5ef", "IP" },
                    { "65949d82-869c-40fb-8afa-f474d768b182", "Network" },
                    { "6d663b57-9da7-4718-b931-880f92dc2cbe", "CyberSecurity" },
                    { "df9a0419-4360-4d50-a750-aab1df7ad52f", "DNS" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "122ff737-d039-44e0-9500-338e8f87760c", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "4cdc7f89-086c-4abb-a570-7c58705a6156", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "6a076450-48b8-4554-a02f-454ca2ca12a2", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "8bfe4341-c999-4d5c-ba48-40c36b22b4ae", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "b8a1674a-8e3b-4c4d-98b7-d900be82b77b", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "bd10a9e1-39ed-4742-ada6-42fcc1f4e71c", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "be5b23ad-4e20-4ced-9ac4-ee9f329762eb", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "c0ffbfe9-c554-4fb0-b8c0-c3b2202a6745", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "d3c86359-5ca6-420a-8875-f14256a86930", "Basic TCP scan", "nmap -sT" },
                    { "e4b1161a-8917-4fa3-ab5c-579501582fcf", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" }
                });
        }
    }
}
