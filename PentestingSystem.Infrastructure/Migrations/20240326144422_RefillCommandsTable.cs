using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace PentestingSystem.Migrations
{
    /// <inheritdoc />
    public partial class RefillCommandsTable : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "0533240a-06de-41f2-a2e8-f64d8974a702");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "43badab3-da4b-4d4d-8fdb-94257e3d8b57");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "4d52fd2b-9c87-4086-9957-458347e38a81");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "ca94588b-4b9b-4224-9996-ce362c035820");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "14d00242-2137-4ad5-a993-9dc60a988836");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "488ef185-1b8d-4bbc-ba4a-ced765cfa79f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8a18c0b8-67cd-4c3a-9802-a9dac41a49a7");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8c2724c3-48c3-45d3-b454-726595f5018c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "970f12c6-5206-4a38-92db-6f81afd8bef3");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b6e6db69-235e-4107-b2ef-99c3c8445acb");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c046c0cf-cfec-4c1d-bdd3-3208e49759ef");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c8dab8e6-c07a-41a0-aa2b-a326b42806b0");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e625de43-0ff3-456e-9811-0305a922adee");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "f83b2a02-5cd3-4844-a4fd-860d7d10a63d");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "3e06f8e5-f1fe-46fb-bde0-102618605967", "DNS" },
                    { "ddefa227-4def-4730-86fb-e3c22a22c7c9", "IP" },
                    { "ea03dba6-3727-4471-b539-3b8a1151e84d", "CyberSecurity" },
                    { "fabc6d1e-9e03-4be7-8365-f2e3bd7b5683", "Network" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "02441079-a33b-488c-b478-6b3384754aa4", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "2c7069c9-8bb0-4916-9477-c560d33458b4", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "5da34f88-d7b7-4e57-9a22-5c7f836e88be", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "6a208444-9cf3-4544-95ea-1c1917a1dca3", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "76d155b8-2360-461f-8a69-d8fc70b61b8f", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "7871e56a-2221-4a33-9041-775026fcbf56", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "7bfb42cc-38bd-43d5-a28c-28ea34fc6c80", "Basic TCP scan", "nmap -sT" },
                    { "922cb31d-d801-4541-8a50-3f993c23f9f9", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "ef3d574f-a8ba-43f1-99df-3321c73775de", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "fe5a8844-f91c-45a3-933b-d0b0650322bf", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" }
                });
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "3e06f8e5-f1fe-46fb-bde0-102618605967");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "ddefa227-4def-4730-86fb-e3c22a22c7c9");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "ea03dba6-3727-4471-b539-3b8a1151e84d");

            migrationBuilder.DeleteData(
                table: "Categories",
                keyColumn: "Id",
                keyValue: "fabc6d1e-9e03-4be7-8365-f2e3bd7b5683");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "02441079-a33b-488c-b478-6b3384754aa4");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "2c7069c9-8bb0-4916-9477-c560d33458b4");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "5da34f88-d7b7-4e57-9a22-5c7f836e88be");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "6a208444-9cf3-4544-95ea-1c1917a1dca3");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "76d155b8-2360-461f-8a69-d8fc70b61b8f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "7871e56a-2221-4a33-9041-775026fcbf56");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "7bfb42cc-38bd-43d5-a28c-28ea34fc6c80");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "922cb31d-d801-4541-8a50-3f993c23f9f9");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "ef3d574f-a8ba-43f1-99df-3321c73775de");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "fe5a8844-f91c-45a3-933b-d0b0650322bf");

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { "0533240a-06de-41f2-a2e8-f64d8974a702", "IP" },
                    { "43badab3-da4b-4d4d-8fdb-94257e3d8b57", "CyberSecurity" },
                    { "4d52fd2b-9c87-4086-9957-458347e38a81", "Network" },
                    { "ca94588b-4b9b-4224-9996-ce362c035820", "DNS" }
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "14d00242-2137-4ad5-a993-9dc60a988836", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "488ef185-1b8d-4bbc-ba4a-ced765cfa79f", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "8a18c0b8-67cd-4c3a-9802-a9dac41a49a7", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "8c2724c3-48c3-45d3-b454-726595f5018c", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "970f12c6-5206-4a38-92db-6f81afd8bef3", "Basic TCP scan", "nmap -sT" },
                    { "b6e6db69-235e-4107-b2ef-99c3c8445acb", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "c046c0cf-cfec-4c1d-bdd3-3208e49759ef", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "c8dab8e6-c07a-41a0-aa2b-a326b42806b0", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "e625de43-0ff3-456e-9811-0305a922adee", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "f83b2a02-5cd3-4844-a4fd-860d7d10a63d", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" }
                });
        }
    }
}
