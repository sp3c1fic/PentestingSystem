using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace PentestingSystem.Migrations
{
    /// <inheritdoc />
    public partial class AddedNewEntities : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "0f0b0b2b-9951-4d37-ad69-52a5ea63ab5e");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "21ddde01-8df4-49f7-b6d7-949e261f7750");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "32f183a3-a0c2-4370-8c83-498b9553000f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "45a912a7-1b29-4b07-8350-0383a034bfad");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8e376bd1-8b05-4b8d-a7a9-a6769b4ea716");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "a225357a-da18-406c-aae5-d8008d0be37f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "a404f3e0-12a3-4ad4-8690-7c4c90d9e52c");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b27c20a6-ed1f-4e59-bfc9-38aea5558237");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "daa93866-231a-433f-9ca6-13f2e3f01c7a");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "ed93d572-d297-49bd-b2ec-820fd5813a87");

            migrationBuilder.CreateTable(
                name: "Categories",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Categories", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Tools",
                columns: table => new
                {
                    Id = table.Column<string>(type: "nvarchar(450)", nullable: false),
                    Name = table.Column<string>(type: "nvarchar(max)", nullable: false),
                    CategoryId = table.Column<string>(type: "nvarchar(450)", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Tools", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Tools_Categories_CategoryId",
                        column: x => x.CategoryId,
                        principalTable: "Categories",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "3a392b7e-97d1-4b91-addc-7c2beaf78c71", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "590a9ee7-d189-4b89-b047-043177828243", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" },
                    { "6f729106-2d55-4f66-9bc5-32113d40828f", "Basic TCP scan", "nmap -sT" },
                    { "78809eb8-9598-4c46-87f5-47cee79ef626", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "8ab5ae77-41a7-403a-a8b8-063f0be413cc", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "b4b5a468-09d2-404b-bfa2-a6d7b430ab3e", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "c046cad5-06eb-456a-b4ec-e997b0dce607", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "daf17004-f3f5-47d1-89bd-3cab67382338", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "df5f6ad6-5e87-43a2-b371-11f5bfae051d", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "e4f1c911-8ca3-481c-a6b6-dbd53808d826", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" }
                });

            migrationBuilder.CreateIndex(
                name: "IX_Tools_CategoryId",
                table: "Tools",
                column: "CategoryId");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Tools");

            migrationBuilder.DropTable(
                name: "Categories");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "3a392b7e-97d1-4b91-addc-7c2beaf78c71");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "590a9ee7-d189-4b89-b047-043177828243");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "6f729106-2d55-4f66-9bc5-32113d40828f");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "78809eb8-9598-4c46-87f5-47cee79ef626");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "8ab5ae77-41a7-403a-a8b8-063f0be413cc");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "b4b5a468-09d2-404b-bfa2-a6d7b430ab3e");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "c046cad5-06eb-456a-b4ec-e997b0dce607");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "daf17004-f3f5-47d1-89bd-3cab67382338");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "df5f6ad6-5e87-43a2-b371-11f5bfae051d");

            migrationBuilder.DeleteData(
                table: "Commands",
                keyColumn: "Id",
                keyValue: "e4f1c911-8ca3-481c-a6b6-dbd53808d826");

            migrationBuilder.InsertData(
                table: "Commands",
                columns: new[] { "Id", "Description", "Name" },
                values: new object[,]
                {
                    { "0f0b0b2b-9951-4d37-ad69-52a5ea63ab5e", "A quick port scan with show us a small overview of the available ports and what versions they are.", "sudo nmap -p- -sV" },
                    { "21ddde01-8df4-49f7-b6d7-949e261f7750", "Custom scan", "nmap -sC -sV -A -p- -Pn --script=http-enum" },
                    { "32f183a3-a0c2-4370-8c83-498b9553000f", "Attempts to discover what OS the host is running", "nmap -O" },
                    { "45a912a7-1b29-4b07-8350-0383a034bfad", "If we detect that IDS/IPS exists, then the decoy scanning method (-D) is the right choice.", "nmap -sS -p- -Pn -n --disable-arp-ping --packet-trace -D RND:5" },
                    { "8e376bd1-8b05-4b8d-a7a9-a6769b4ea716", "Basic TCP scan", "nmap -sT" },
                    { "a225357a-da18-406c-aae5-d8008d0be37f", "Scanning a range of networks with this method only works if the firewalls in place allow it.", "nmap -sn -oA" },
                    { "a404f3e0-12a3-4ad4-8690-7c4c90d9e52c", "Scans the top ten ports", "sudo nmap --top-ports=10" },
                    { "b27c20a6-ed1f-4e59-bfc9-38aea5558237", "Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones.", "nmap -F -sU" },
                    { "daa93866-231a-433f-9ca6-13f2e3f01c7a", "Scans the host in an aggressive manner. Hence the name aggressive scan", "nmap -A" },
                    { "ed93d572-d297-49bd-b2ec-820fd5813a87", "The Nmap TCP Connect Scan (-sT) uses the TCP three-way handshake to determine if a specific port on a target host is open or closed.", "nmap --packet-trace --disable-arp-ping -Pn -n --reason -sT" }
                });
        }
    }
}
