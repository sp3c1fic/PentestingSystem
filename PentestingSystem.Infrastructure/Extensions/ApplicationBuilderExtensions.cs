using Microsoft.AspNetCore.Builder;
using Microsoft.EntityFrameworkCore;
using PentestingSystem.Infrastructure.Data;
using PentestingSystem.Infrastructure.Data.Models;

using Microsoft.Extensions.DependencyInjection;
using NuGet.Packaging;

namespace PentestingSystem.Infrastructure.Extensions;

public static class ApplicationBuilderExtensions
{
    public static async Task<IApplicationBuilder> PrepareDatabase(this IApplicationBuilder app)
    {
        using var serviceScope = app.ApplicationServices.CreateScope();
        var services = serviceScope.ServiceProvider; 
        
        MigrateDatabase(services);
        await SeedCategories(services);
        await SeedTools(services);
        await SeedDnsRecords(services);

        return app;
    }

    private static void MigrateDatabase(IServiceProvider services)
    {
        var data = services.GetRequiredService<ApplicationDbContext>();
        data.Database.Migrate();
    }

    private static async Task SeedCategories(IServiceProvider services)
    {
        var data = services.GetRequiredService<ApplicationDbContext>();

        if (data.Categories.Any())
        {
            return;
        }
        
        await data.Categories.AddRangeAsync(new[]
        {
            new Category
            {
                Name = "DNS",
                Description = "Are you a webmaster or programmer and searching for a DNS toolbox? The online DNS tools by DNS Checker help solve DNS problems and resolve issues regarding a website's DNS (Domain Name System) Records. The DNS records help to entertain incoming requests and point them to the correct server, which helps the server receive those requests and respond accordingly. "
            },
            
            
            new Category
            {
            Name = "IP",
            Description = "IP tools solve your online IP-related problems. Whether it's online What is my IP, IP Location Finder, IP WHOIS lookup, or an IPv6 WHOIS lookup, all IP-related tools are here. Our IP tools tell you your IP address. You can also find the IP location of any IPs and track the location of those IP addresses with our integrated geo IP services. Our tools also check any entered IP for IP blacklist check in anti-spam databases, which tells whether your IP or server IP is under a ban from different services or not.",
                
            },
            
            new Category
            {
                Name = "Cyber Security",
                Description = "Cyber Security tools are intended to ensure your websites are secure and meet international security standards. It contains tools for website security checkups and identifying any vulnerabilities in the site. It has become the need of time to regularly get a security health checkup on your websites to avoid any data loss or hacking and attacks."
                
            },
            
            new Category
            {
                Name = "Network",
                Description = "Network tools provide network-related services, and these services may include checking open ports, i.e., TCP & UDP ports scanning and OUI lookup, i.e., checking vendors of any device using its MAC address or an AS Number lookup, which tells you complete info about any ASN number, and many more tools regarding networking and networking parameters."
            
            }
        });

        await data.SaveChangesAsync();

    }

   
    private static async Task SeedTools(IServiceProvider services)
    {
        var data = services.GetRequiredService<ApplicationDbContext>();

        if (!data.Categories.Any())
        {
            throw new InvalidOperationException("No categories were found in the database");
        }

        // Potentially throw out in a service, make sure there is no repeatable code
        
        var dnsCategory = await data.Categories
            .Where(c => c.Name == "DNS")
            .Include(category => category.Tools)
            .FirstOrDefaultAsync();

        var ipCategory = await data.Categories
            .Where(c => c.Name == "IP").Include(category => category.Tools)
            .FirstOrDefaultAsync();

        var cyberSecurityCategory = await data.Categories
            .Where(c => c.Name == "Cyber Security").Include(category => category.Tools)
            .FirstOrDefaultAsync();

        var networkCategory = await data.Categories
            .Where(c => c.Name == "Network").Include(category => category.Tools)
            .FirstOrDefaultAsync();

        var dnsTools = new List<Tool>
        {
            new()
            {
                Name = "Reverse IP Lookup",
                ShortDescription = "Resolve IP to Hostname",
                LongDescription = "Reverse IP Lookup tools resolve a given IP to the Host. When you enter an IP address, the tool attempts to locate a DNS PTR record for that IP address.",
                IconPath = "images/laptop.png",
                CategoryId = dnsCategory!.Id,
                Category = dnsCategory
            },
            new()
            {
                Name = "DNS Lookup",
                ShortDescription = "See all DNS Records of a Domain",
                LongDescription = "\n\nThe DNS Lookup finds all DNS records of a given domain name. The DNS records include but are not limited to A, AAAA, CNAME, MX, NS, PTR, SRV, SOA, TXT, CAA, DS, and DNSKEY. Use this DNS lookup tool to view these DNS record types effortlessly. Enter the domain URL, select the desired DNS record type, or choose 'ALL' to fetch all DNS records.",
                IconPath = "images/brand.png",
                CategoryId = dnsCategory!.Id,
                Category = dnsCategory
            },
            
            new()
            {
                Name = "MX Lookup",
                ShortDescription = "See Mail Records of a Domain",
                LongDescription = "Leverage our powerful MX lookup tool to retrieve “mail exchange” record details of any domain in real-time. Our MX record checker is reliable, intuitive, and free.",
                IconPath = "images/mx.png",
                CategoryId = dnsCategory!.Id,
                Category = dnsCategory
            },
            
            new()
            {
                Name = "SPF Record checker",
                ShortDescription = "See SPF Records of a Domain",
                LongDescription = "The SPF record check validation tool allows users to determine whether some SPF record exists in type “TXT” of the subject domain or host's DNS records. ",
                IconPath = "images/check.png",
                CategoryId = dnsCategory!.Id,
                Category = dnsCategory
            }
        };

        var ipTools = new List<Tool>
        {
            new()
            {
                Name = "Ping IPv4 Address",
                CategoryId = ipCategory!.Id,
                ShortDescription = "Send ICMP Packets and ping IPv4",
                LongDescription = "Online Ping IPv4 tool sends ICMP packets to ping a destination IP or domain to check whether it's accessible on the IP network.",
                IconPath = "images/global-location.png",
                Category = ipCategory
            },
            new()
            {
                Name = "Traceroute",
                ShortDescription = "Trace Complete Route of an IP or hostname",
                LongDescription = "Traceroute Online records the whole path through which network request routes to the provided Domain or IP Address.",
                IconPath = "images/tracking.png",
                CategoryId = ipCategory!.Id,
                Category = ipCategory
            },
            
            new()
            {
                Name = "WhoIs",
                CategoryId = ipCategory!.Id,
                ShortDescription = "Check who owns an IP Address",
                LongDescription = "Enter an IP address to check who owns it and retrieve associated information such as registration date, location, and network details.",
                IconPath = "images/web.png",
                Category = ipCategory
            },
            
            new()
            {
                Name = "What is my ISP",
                ShortDescription = "Check what you ISP is",
                LongDescription = "Our What is my ISP tool assists you in discovering the information about Who is my Internet Service Provider (ISP). ",
                IconPath = "images/question-mark.png",
                CategoryId = ipCategory!.Id,
                Category = ipCategory
            }
        };

        var cyberSecurityTools = new List<Tool>
        {
            new()
            {
                Name = "SSL Certificate Checker",
                ShortDescription = "Examine SSL of any Site",
                LongDescription = "SSL checker fetches all possible information about an SSL certificate of the subject host or domain.",
                IconPath = "images/ssl.png",
                CategoryId = cyberSecurityCategory!.Id,
                Category = cyberSecurityCategory
            },
            new()
            {
                Name = "Password Encryption Utility",
                ShortDescription = "Encode any Password or Text",
                LongDescription = "Password encryption utility helps developers and webmasters to encrypt passwords with standard encryption algorithms. The algorithms used are two-way encryption, which means they can be decoded later with the same algorithm. The passwords encrypted with this utility are useful for storing in databases, etc.",
                IconPath = "images/private-key.png",
                CategoryId = cyberSecurityCategory!.Id,
                Category = cyberSecurityCategory
            },

            new()
            {
                Name = "Password Generator",
                ShortDescription = "Generate Secure Random Password",
                LongDescription = "Password generator tool generates most-secure and un-hackable short and long length passwords. We never store any password, and all password limits to your browser only and no password are sent outside your browser to any server in any way. You do not have to worry about security and can use these passwords in any of your online accounts or projects.",
                IconPath = "images/password.png",
                CategoryId = cyberSecurityCategory!.Id,
                Category = cyberSecurityCategory
            },

            new()
            {
                Name = "Password Strength Checker",
                ShortDescription = "Check the strength of any password",
                LongDescription = "Check the strength of any password",
                IconPath = "images/padlock.png",
                CategoryId = cyberSecurityCategory!.Id,
                Category = cyberSecurityCategory
            }
        };

        var networkTools = new List<Tool>
        {
            new()
            {
                Name = "Port checker",
                ShortDescription = "Check for open Network Ports",
                LongDescription = "Check for Open Network Ports",
                IconPath = "images/ethernet.png",
                CategoryId = networkCategory!.Id,
                Category = networkCategory
            },
            new()
            {
                Name = "Mac Address Lookup",
                ShortDescription = "Check vendor via MAC Address",
                LongDescription = "It has become hassle-free to check the availability of ports associated with a specific domain or IP address. Also, with our port checker, check for open ports and verify the port forwarding setup on your router.",
                IconPath = "images/ethernet_2.png",
                CategoryId = networkCategory!.Id,
                Category = networkCategory
            },

            new()
            {
                Name = "MAC Address Generator",
                ShortDescription = "Generate Random MAC Address",
                LongDescription = "The MAC Address Generator generates the random number of MAC addresses for your testing purposes. The tool provides the option to specify the custom prefix (OUI). And can generate the four most commonly used MAC address formats in upper and lower case for your convenience.\n",
                IconPath = "images/gpu.png",
                CategoryId = networkCategory!.Id,
                Category = networkCategory
            },

            new()
            {
                Name = "ASN WHOIS Lookup",
                ShortDescription = "Locate who owns an ASN",
                LongDescription = "ASN Lookup tool tells the ASN WHOIS details. Just enter the AS number and find which company is using that ASN and what the origin of that company is. i.e., country, city, latitude, longitude, state, etc.",
                IconPath = "images/pin.png",
                CategoryId = networkCategory!.Id,
                Category = networkCategory
            }
        };
        
        
        dnsCategory.Tools.AddRange(dnsTools);
        ipCategory.Tools.AddRange(ipTools);
        cyberSecurityCategory.Tools.AddRange(cyberSecurityTools);
        networkCategory.Tools.AddRange(networkTools);
        

        await data.Tools.AddRangeAsync(dnsTools);
        await data.Tools.AddRangeAsync(ipTools);
        await data.Tools.AddRangeAsync(cyberSecurityTools);
        await data.Tools.AddRangeAsync(networkTools);

        await data.SaveChangesAsync();
    }

    private static async Task SeedDnsRecords(IServiceProvider services)
    {
        var data = services.GetRequiredService<ApplicationDbContext>();

        if (data.DnsRecords.Any())
        {
            return;
        }

        var dnsRecordsCollection = new List<DnsRecord>()
        {
            new DnsRecord
            {
                Type = "MX"
            },
            
            new DnsRecord
            {
                Type = "NS"
            },
            new DnsRecord
            {
                Type = "SOA"
            },
            new DnsRecord
            {
                Type = "CNAME"
            },
            new DnsRecord
            {
                Type = "PTR"
            },
            new DnsRecord
            {
                Type = "SRV"
            },
            new DnsRecord
            {
                Type = "TXT"
            },
            new DnsRecord
            {
                Type = "CAA"
            }
        };
        
       await  data.DnsRecords.AddRangeAsync(dnsRecordsCollection);
       await data.SaveChangesAsync();

    }
}