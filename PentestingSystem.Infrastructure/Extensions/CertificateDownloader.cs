using System.Net.Security;
using System.Net.Sockets;
using System.Security.Cryptography.X509Certificates;

namespace PentestingSystem.Infrastructure.Extensions;

public static class CertificateDownloader
{
    private static readonly RemoteCertificateValidationCallback s_certificateCallback = (_, _, _, _) => true;

    public static async Task<X509Certificate2?> GetCertificateAsync(string domain, int port = 443)
    {
        using var client = new TcpClient(domain, port);
        await using var sslStream = new SslStream(client.GetStream(), 
                                                leaveInnerStreamOpen: true, s_certificateCallback);

        await sslStream.AuthenticateAsClientAsync(domain).ConfigureAwait(false);

        var serverCertificate = sslStream.RemoteCertificate;
        return serverCertificate != null ? new X509Certificate2(serverCertificate) : null;
    }
}