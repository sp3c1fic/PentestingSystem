using Microsoft.EntityFrameworkCore;
using PentestingSystem.Models;
using System.Collections;
using PentestingSystem.Core.Contracts;
using PentestingSystem.Infrastructure.Data;
using PentestingSystem.Core.Models.Tools;


namespace PentestingSystem.Core.Services
{
    public class CategoryService : ICategoryService
    {
        private readonly ApplicationDbContext _context;

        public CategoryService(ApplicationDbContext context)
        {
            _context = context;
        }

        public async Task<ICollection> GetCategories()
        {
            var categories = await _context.Categories
                .Select(c => new CategoryServiceModel
                {
                    Name = c.Name,
                    Description = c.Description,
                    Tools = c.Tools
                        .Where(t => t.CategoryId == c.Id)
                        .Select(t => new ToolsServiceModel
                        {
                            Name = t.Name,
                            IconPath = t.IconPath,
                            ShortDescription = t.ShortDescription
                        })
                        .Distinct()
                        .ToList(),
                })
                .ToListAsync();

            SetControllerNames(categories);
            
            return categories;
        }

        private static void SetControllerNames(IEnumerable<CategoryServiceModel> categories)
        {
            foreach (var category in categories)
            {
                foreach (var tool in category.Tools)
                {
                    tool.ControllerName = tool.Name.Replace(" ", string.Empty);
                }
            }
        }
    }
}
