using Microsoft.EntityFrameworkCore;
using System.Collections;
using System.Text.RegularExpressions;
using PentestingSystem.Core.Models.Tools;
using PentestingSystem.Core.Contracts;
using PentestingSystem.Infrastructure.Data;


namespace PentestingSystem.Core.Services
{
    public class ToolsService : IToolsService
    {
        private readonly ApplicationDbContext _context;

        public ToolsService(ApplicationDbContext context)
        {
            _context = context;
        }
        public async Task<ICollection> GetToolNames()
        {
            var tools = await _context.Tools
                .Select(x => new ToolsServiceModel
                {
                    Name = x.Name,
                    
                })
                .ToListAsync();

            return tools;
        }

        public async Task<ToolsServiceModel> GetSpecificTool(string toolName)
        {
            var specificTool = await _context.Tools
                .Where(t => t.Name == toolName)
                .Select(t => new ToolsServiceModel
                {
                    Name = t.Name,
                    LongDescription = t.LongDescription
                })
                .FirstOrDefaultAsync();
            return specificTool!;
        }

        public async Task<List<ToolsServiceModel>> GetMoreTools()
        {
            var moreTools = await _context.Tools
                .Select(t => new ToolsServiceModel
                {
                    Name = t.Name,
                    IconPath = t.IconPath,
                    ControllerName = Regex.Replace(t.Name, @"\s+", "")
                })
                .Distinct()
                .ToListAsync();
            
            return moreTools.Take(6).ToList();
        }
        
        
    }
}
