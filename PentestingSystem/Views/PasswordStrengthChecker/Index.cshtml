@model PasswordStrengthCheckerFormModel

<style>
	.strength-checker-container {
		background-color: rgba(0, 0, 0, 5);
		border:1 px solid black;
		border-radius: 5px;
		box-shadow: 0px 0px 10px 5px rgba(0, 0, 0, 0.5);
		position: relative;
		top: 40%;
	}

	#strength-checker-form {
		height: 150px;
	}

	#strength-checker-form input {
		width: 60%;
		height: 50px;
		border-radius: 5px;
	}

	.no-info-collect-text {
		display: block;
	}
</style>


<div class="text-center strength-checker-container mt-5">
	<h2 class="text-light fw-bolder">How secure is my password?</h2>
	<p class="text-light"><i class="fa fa-check-circle text-success" aria-hidden="true"></i>
		Take a moment to check if your passwords are easy pickings for bad actors.
	<p>
	<form class="form-group" id="strength-checker-form" method="post">
			<input asp-for="@Model.Password" id="password-check-input" type="password" class="text-center" placeholder="Enter password" required />
			<span class="text-danger" asp-validation-for="@Model.Password"></span>
			<small class="text-success no-info-collect-text fw-bold mt-2" >We do not collect or store the passwords entered in the field.</small>
			<button asp-controller="PasswordStrengthChecker" asp-action="CheckPasswordStrength" class="btn btn-dark mt-4" type="submit">Check!</button>
	</form>
</div>
<div id="loadingSpinner" style="display: none" class="text-light text-center mt-5">
	<i class="fa fa-spinner fa-spin"></i> Checking ...
</div>

<partial name="_PasswordStrengthCheckerResults" model="new PasswordStrengthCheckerServiceModel()" />
<partial name="_RelatedTools" model="new List<ToolsServiceModel>()"/>
<partial name="_BetterAccountSecurity" />
<partial name="_PasswordStrengthChecker" />

<script
    src="https://code.jquery.com/jquery-3.7.1.js"
    integrity="sha256-eKhayi8LEQwp4NKxN+CfCh+3qOVUtJn3QNZ0TciWLP4="
    crossorigin="anonymous">
</script>


<script>
	const re = new RegExp(/<p class="[^"]*">(.*?)<\/p>/g);

	
	                function loadRelatedTools() {
                                $.ajax({
                                    url: '@Url.Action("RelatedTools", "Tools")', // URL of the RelatedTools action
                                    type: 'GET',
                                    success: function(data) {
                                        console.log(data);
                                        
                                        const rgx = /<div\s+class="tools-links"[\s\S]*?<\/div>/g;
                                        const match = data.match(rgx);
                                        const extractedHtml = match ? match[0] : null;
                                        
                                        $('#relatedToolsContainer').html(extractedHtml); // Render related tools in the container
                                    },
                                    error: function(xhr, status, error) {
                                        console.error('Error loading related tools:', error);
                                    }
                                });
                            }

	function colorResults() { 
		const passwordStrengthParagraphElement = document.querySelector('p.password-strength.text-light');

		let passwordStrength = passwordStrengthParagraphElement.textContent.split(": ")[1];


		if (passwordStrength === "VeryWeak")

		console.log(passwordStrength);
	}

	function processExtractedHtmlData(array, results) { 
		results.innerHTML = "";

		array.forEach(element => {
			element = element.filter(e => e.includes('</p>'));
			results.innerHTML += element;		
		});
	}

	function exctractCertainHtml(data) {
		const matches = [...data.matchAll(re)];

		return matches;
	}
	
	function hide(results) {
		if (results.style.display === "" || 
			results.style.display === "block") {
			
				results.style.display = "none";
		}
	}

	function show(results) {
		if (results.style.display === "none") { 
			results.style.display = "block";
		}		
	}

	$(document).ready(function () {
		let results = document.getElementById("password-strength-result");
		let resultsJquery = $("#password-strength-result");
		loadRelatedTools();
		hide(results);
		$("#strength-checker-form").submit(function (e) {
			e.preventDefault();
			results.innerHTML = "";
			hide(results);
			// perhaps should check to see if it is visible or not 
			$('#password-strength-result').hide();
			
			
			setTimeout(function () {
				$('#loadingSpinner').hide();

			}, 2000);

			$.ajax({

				url: 'http://localhost:5052/PasswordStrengthChecker/CheckPasswordStrength',
				observe: "response",
				headers: {
					'Access-Control-Allow-Origin': '*'
				},
				type: 'POST',
				crossDomain: true,
				data: $(this).serialize(),
				success: function (data) {
					data = data.trim();
					let htmlArr = exctractCertainHtml(data);
					processExtractedHtmlData(htmlArr, results);
					colorResults(results)
					show(results);
					return -1;
				},
				error: function () {
					console.log("error");
				}
			});
		});
	});

</script>