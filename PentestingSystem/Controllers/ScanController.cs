using System.Diagnostics;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using PentestingSystem.Core.Contracts;
using PentestingSystem.Core.Models.Scans;
using PentestingSystem.Models.Scans;

namespace PentestingSystem.Controllers;

[Authorize]
public class ScanController(IScanService scanService) : Controller
{

    public async Task<IActionResult> Index()
    {
        var scanFormModel = new ScanFormModel
        {
            ScanCommands = await scanService.GetScanCommands()
        };

        return View(scanFormModel);
    }
    [HttpPost]

    public async Task<IActionResult> Scan(ScanFormModel model)
    {
        var target = model.Target;
        var scanCommandId = model.ScanCommandId;
        var arg = await scanService.ParseArgs(scanCommandId);
        
        if (!ModelState.IsValid)
        {
            return BadRequest("Invalid hostname format");
        }

        var process = new Process();
        var startInfo = scanService.CreateProcessStartInfo(arg, target);
        
        process.StartInfo = startInfo;
        process.Start();
   
        var output = await process.StandardOutput.ReadToEndAsync();
        var error = await process.StandardError.ReadToEndAsync();

        await process.WaitForExitAsync();

        var viewModel = new ScanServiceModel
        {
            Message = process.ExitCode == 0
                ? "Scan completed successfully:"
                : $"Scan failed with exit code {process.ExitCode}:",
            Output = process.ExitCode == 0 ? output : error
        };
       
        return PartialView("_ScanResults", viewModel);
    }
}
    